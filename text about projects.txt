I am currently developing an AI-powered Tic Tac Toe game in Python, with a focus on deepening my understanding of the Minimax algorithm. I've additionally added the ability to play a fully randomized version of tic tac toe where the CPU player mindlessly selections an option, however my primary goal is to explore how the Minimax function operates to determine the most optimal move in games like Tic Tac Toe. The Minimax algorithm, a classic decision-making approach used in game theory, evaluates possible game outcomes by simulating all potential moves and counter-moves, assuming that both players will play optimally. Through this project, I am gaining practical experience in implementing the Minimax algorithm, handling game states, and refining my understanding of recursion, as the function recursively assesses the value of each move, ultimately choosing the one that leads to the best possible outcome for the AI. This project allows me to further strengthen my problem-solving abilities and coding skills in Python, while also expanding my knowledge of algorithmic approaches in game development.